// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String @id @default(uuid())
  firstName       String
  lastName        String
  email           String

  organizationId  String
  organization    Organization @relation(fields: [organizationId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Organization {
  id        String @id @default(uuid())
  name      String

  users User[]
  projects Project[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Project {
  id               String @id @default(uuid())
  name             String
  homeownerName    String
  homeownerPhone   String
  homeownerEmail   String
  homeownerAddress String

  organizationId   String
  organization     Organization @relation(fields: [organizationId], references: [id])

  projectData ProjectData?
  projectRooms ProjectRoom[]
  insulation ProjectInsulation[]
  airSealing ProjectAirSealing[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model ProjectData {
  id                      String @id @default(uuid())
  squareFootage           Int?
  roomCount               Int?
  bathroomCount           Int?
  bedroomCount            Int?
  stories                 Int?
  yearBuilt               Int?
  basementType            String?
  comfortIssueTags        String[] @default([])
  comfortIssueNotes       String?
  healthSafetyIssueTags   String[] @default([])
  healthSafetyIssueNotes  String?
  homeownerGoalsTags      String[] @default([])
  homeownerGoalsNotes     String?

  projectId  String    @unique
  project    Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model ProjectRoom {
  id                String @id @default(uuid())
  name              String?
  type              String?
  width             Int?
  length            Int?
  ceilingHeight     Int?
  floor             String?
  usage             String?
  comfortIssueTags String[] @default([])
  safetyIssueTags  String[] @default([])
  notes             String?

  projectId  String
  project    Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model ProjectInsulation {
  id                  String @id @default(uuid())
  name                String
	insulationLocation  String
	insulationCondition String
	notes               String

  projectId  String
  project    Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model ProjectAirSealing {
  id                    String @id @default(uuid())
  name                  String
	leakinessDescription  String
	notes                 String

  projectId  String
  project    Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
